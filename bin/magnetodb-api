#!/usr/bin/env python

# Copyright 2013 Mirantis Inc.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

import os
import sys

PRODUCT_NAME="magnetodb"

# If ../PRODUCT_NAME/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                                os.pardir,
                                                os.pardir))
if os.path.exists(os.path.join(possible_topdir, PRODUCT_NAME, '__init__.py')):
    sys.path.insert(0, possible_topdir)

from magnetodb.common import config
from magnetodb.openstack.common import gettextutils
from magnetodb.openstack.common import log
from magnetodb.openstack.common import pastedeploy
from magnetodb.openstack.common import service
from magnetodb.openstack.common import wsgi

gettextutils.install(PRODUCT_NAME, lazy=False)

CONF = config.CONF

if __name__ == '__main__':
    config.parse_args(sys.argv)
    log.setup(PRODUCT_NAME)

    try:
        api_paste_config_file = CONF.find_file(CONF.api_paste_config)
        app = pastedeploy.paste_deploy_app(api_paste_config_file, PRODUCT_NAME, {})
        server = wsgi.Service(app, host=CONF.bind_host, port=CONF.bind_port)
        
        launcher = service.launch(server, workers=CONF.magnetodb_api_workers)
        launcher.wait()
    except RuntimeError as error:
        import traceback
        print traceback.format_exc()
        sys.exit("ERROR: %s" % error)